# waternew1[waternew1[,3]==2015,3] = 3
waternew1 <- readRDS("map.rds")
ui = (fluidPage(navbarPage("Exploring NYC's Water",
tabPanel("ad",
headerPanel("Heatmap"),
sidebarPanel( width=4,selectInput("year","Choose a Year to display",
choices = list("2013"=1,"2014"=2,"2015"=3),
selected = 3)),
mainPanel(width=8,
chartOutput("baseMap", "leaflet"),
tags$style('.leaflet {height: 500px;}'),
tags$head(tags$script(src="http://leaflet.github.io/Leaflet.heat/dist/leaflet-heat.js")),
uiOutput('heatMap')
)
))))
server = function(input, output) {
output$baseMap  <- renderMap({
baseMap <- Leaflet$new()
baseMap$setView(c(40.7577,-73.9857), 10)
baseMap$tileLayer(provider = "Stamen.TonerLite")
baseMap
})
output$heatMap <- renderUI({
watermap <- waternew1[waternew1[,3]==as.numeric(input$year),]
watermap <- as.data.table(watermap)
watermap <- watermap[(Latitude != ""), .(count = .N), by=.(Latitude, Longitude)]
j <- paste0("[",watermap[,Latitude], ",", watermap[,Longitude], ",", watermap[,count], "]", collapse=",")
j <- paste0("[",j,"]")
tags$body(tags$script(HTML(sprintf("
var addressPoints = %s
if (typeof heat === typeof undefined) {
heat = L.heatLayer(addressPoints)
heat.addTo(map)
} else {
heat.setOptions()
heat.setLatLngs(addressPoints)
}
</script>"
, j))))
})
}
shinyApp(ui,server )
setwd("~/GitHub/project2-cycle2-8")
shiny::runApp('app')
setwd("~/GitHub/project2-cycle2-8/app")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
waternew <- readRDS("data/pie.rds")
setwd("~/GitHub/project2-cycle2-8")
water <- readRDS("data/data_4.Rds")
waternew <- readRDS("data/pie.rds")
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
map1 <- readRDS("data/map1.rds")
map2 <- readRDS("data/map2.rds")
map3 <- readRDS("data/map3.rds")
waternew <- readRDS("pie.rds")
waternew <- readRDS("data/pie.rds")
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
map2 <- readRDS("data/map2.rds")
getwd()
waternew <- readRDS("../data/pie.rds")
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
detach("package:plyr", unload=TRUE)
shiny::runApp('app')
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:plyr", unload=TRUE)
shiny::runApp('app')
detach("package:dplyr", unload=TRUE)
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
library(rMaps)
L2 <- Leaflet$new()
L2$setView(c(29.7632836,  -95.3632715), 10)
L2$tileLayer(provider = "MapQuestOpen.OSM")
L2
options(browser = T)
library(rMaps)
L2 <- Leaflet$new()
L2$setView(c(29.7632836,  -95.3632715), 10)
L2$tileLayer(provider = "MapQuestOpen.OSM")
L2
options( device = T)
library(rMaps)
L2 <- Leaflet$new()
L2$setView(c(29.7632836,  -95.3632715), 10)
L2$tileLayer(provider = "MapQuestOpen.OSM")
L2
options( device = html)
library(rMaps)
options(viewer=T)
library(rMaps)
L2 <- Leaflet$new()
L2$setView(c(29.7632836,  -95.3632715), 10)
L2$tileLayer(provider = "MapQuestOpen.OSM")
L2
library(rMaps)
L2 <- Leaflet$new()
L2$setView(c(29.7632836,  -95.3632715), 10)
L2$tileLayer(provider = "MapQuestOpen.OSM")
L2
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('GitHub/project2-cycle2-8/app')
library(shiny)
library(plyr)
library(dplyr)
library(data.table)
library(wordcloud)
library(plotly)
library(zoo)
library(leaflet)
library(rCharts)
library(ggplot2)
require(lubridate)
library(dygraphs)
library(xts)
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
topo.colors(12)
final_shiny_1
shiny::runApp('GitHub/project2-cycle2-8/app')
final_shiny_1
class(final_shiny_1)
ls(final_shiny_1)
final_shiny_1[1]
final_shiny_1[1,]
final_shiny_1
colnames(fina_shiny_1)
colnames(final_shiny_1)
borough <- colnames(final_shiny_1)
year <- rep(c(2014,2015),5)
year
year <- rbind(rep(2014,5),rep(2015,5))
year
year <- cbind(rep(2014,5),rep(2015,5))
year
year <- c(rep(2014,5),rep(2015,5))
year
borough <- rep(colnames(final_shiny_1),2)
borough
final_shiny_1 <- data.frame(year,borough)
final_shiny_1
final_shiny_1 <- readRDS("../data/final_shiny.rds")
final_shiny_1 <- readRDS("../data/final_shiny.rds")
final_shiny_1 <- readRDS("data/final_shiny.rds")
setwd("~/GitHub/project2-cycle2-8/app")
final_shiny_1 <- readRDS("../data/final_shiny.rds")
final_shiny_1
year <- c(rep(c(2014,2015),2))
year
year <- c(rep(c(2014,2015),5))
year
colnames(final_shiny_1)[1]
borough <- c(rep(colnames(final_shiny_1)[1],2),
rep(colnames(final_shiny_1)[2],2),
rep(colnames(final_shiny_1)[3],2),
rep(colnames(final_shiny_1)[4],2),
rep(colnames(final_shiny_1)[5],2))
borough
duplicates <- c(final_shiny_1[,1],
final_shiny_1[,2],
final_shiny_1[,3],
final_shiny_1[,4],
final_shiny_1[,5])
duplicates
final_shiny_2 <- data.frame(year,borough,duplicates)
final_shiny_2
duplicates
final_shiny_2
final_shiny_2[,3]
final_shiny_2
attach(final_shiny_2)
duplicates[,borough="Bronx"]
duplicates[borough="Bronx"]
shiny::runApp()
shiny::runApp()
final_shiny_2["Bronx",3]
shiny::runApp()
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=final_shiny_2[,3],y=final_shiny_2[final_shiny_2[,2]==input$burr,3]),stat="identity")
c
final_shiny_2[,2]==input$burr
final_shiny_2[,2]
final_shiny_2[,2]=="Bronx"
final_shiny_2[final_shiny_2[,2]=="Bronx",3]
shiny::runApp()
shiny::runApp()
shiny::runApp()
c <- ggplot(final_shiny_2,aes(x=final_shiny_2[,3],y=final_shiny_2[final_shiny_2[,2]==input$burr,3]))+
geom_bar(,stat="identity")
c
c <- ggplot(final_shiny_2,aes(x=final_shiny_2[,3],y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]))+
geom_bar(,stat="identity")
c
final_shiny_2[final_shiny_2[,2]=="Bronx",3]
c <- ggplot(final_shiny_2,aes(x=final_shiny_2[,1],y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]))+
geom_bar(,stat="identity")
c
x=final_shiny_2[,1]
final_shiny_2[,1]
c <- ggplot(final_shiny_2,aes(x=final_shiny_2[final_shiny_2[,2]=="Bronx",1],y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]))+
geom_bar(,stat="identity")
c
final_shiny_2[final_shiny_2[,2]=="Bronx",1]
c <- ggplot(final_shiny_2,aes(x=c(2014,2015),y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]))+
geom_bar(,stat="identity")
c
final_shiny_2[final_shiny_2[,2]=="Bronx",3]
length(final_shiny_2[final_shiny_2[,2]=="Bronx",3])
length(c(2014,2015))
shiny::runApp()
c <- ggplot(final_shiny_2,aes(x=c("2014","2015"),y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]))+
geom_bar(,stat="identity")
c
year[1:2]
c <- ggplot(final_shiny_2,aes(x=year[1:2],y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]))+
geom_bar(,stat="identity")
c
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=year[1:2],y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]),stat="identity")
c
final_shiny_2[,3] <- as.numeric(final_shiny_2[,3])
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=year[1:2],y=final_shiny_2[final_shiny_2[,2]=="Bronx",3]),stat="identity")
c
final_shiny_2[final_shiny_2[,2]=="Bronx",3]
class(final_shiny_2[final_shiny_2[,2]=="Bronx",3])
class(final_shiny_2[final_shiny_2[,2]=="Bronx",2])
class(final_shiny_2[final_shiny_2[,2]=="Bronx",1])
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=year[1:2],y=final_shiny_2[1:2,3]),stat="identity")
c
geom_bar(aes(x=year[1],y=final_shiny_2[1,3]),stat="identity")
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=year[1],y=final_shiny_2[1,3]),stat="identity")
c
final_shiny_2[1,3]
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=final_shiny_2[1,1],y=final_shiny_2[1,3]),stat="identity")
c
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=final_shiny_2[1:2,1],y=final_shiny_2[1:2,3]),stat="identity")
c
geom_bar(aes(x=c("2014","2015"),y=final_shiny_2[1:2,3]),stat="identity")
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=c("2014","2015"),y=final_shiny_2[1:2,3]),stat="identity")
c
mtcars
diamonds
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=as.factor(c("2014","2015")),y=final_shiny_2[1:2,3]),stat="identity")
c
meanprice <- tapply(diamonds$price, diamonds$cut, mean)
cut <- factor(levels(diamonds$cut), levels = levels(diamonds$cut))
cut
meanprice
barplot(final_shiny_1[,input$burr],
#           main=input$borough,
#           col = topo.colors(12),
#           ylab="Number of Duplicate Complaints",
#           xlab="Year", ylim=c(0,max(final_shiny_1)))
s
L
barplot(final_shiny_1[,"Bronx],
main=input$borough,
col = topo.colors(12),
ylab="Number of Duplicate Complaints",
xlab="Year", ylim=c(0,max(final_shiny_1)))
barplot(final_shiny_1[,"Bronx],
main="Bromx",
col = topo.colors(12),
ylab="Number of Duplicate Complaints",
xlab="Year", ylim=c(0,max(final_shiny_1)))
barplot(final_shiny_1[,"Bronx"],
main="Bromx",
col = topo.colors(12),
ylab="Number of Duplicate Complaints",
xlab="Year", ylim=c(0,max(final_shiny_1)))
c <- ggplot(final_shiny_2)+
geom_bar(aes(x=as.factor(c("2014","2015")),y=final_shiny_2[1:2,3]),stat="identity")
c
c <- ggplot(final_shiny_2,aes(x=as.factor(c("2014","2015")),y=final_shiny_2[1:2,3]))+
geom_bar(stat="identity")
c
final_shiny_2[1:2,3]
c <- ggplot(final_shiny_2,aes(x=year,y=duplicates))+
geom_bar(stat="identity")
c
c <- ggplot(final_shiny_2,aes(x=as.factor(year),y=duplicates))+
geom_bar(stat="identity")
c
c <- ggplot(final_shiny_2,aes(x=as.factor(year),y=duplicates))+
geom_bar(stat="identity")+
theme(xlab="Year",ylab="Number of Duplicate Complaints",
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
c
c <- ggplot(final_shiny_2,aes(x=as.factor(year),y=duplicates))+
geom_bar(stat="identity")+
theme(xlab="Year",ylab="Number of Duplicate Complaints",
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = element_rect(fill = "transparent",colour = NA))
c
c <- ggplot(final_shiny_2,aes(x=as.factor(year),y=duplicates))+
geom_bar(stat="identity")+
theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = element_rect(fill = "transparent",colour = NA))+
xlab("Year")+
ylab("Number of Duplicate Complaints")
c
c <- ggplot(final_shiny_2,aes(x=as.factor(year),y=duplicates))+
geom_bar(stat="identity")+
theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA))+
xlab("Year")+
ylab("Number of Duplicate Complaints")
c
final_shiny_1[,1]
duplicates <- final_shiny_1[,1]
year <- c("2014","2015")
bor1 <- data.frame(year,duplicates)
duplicates <- final_shiny_1[,2]
year <- c("2014","2015")
bor2 <- data.frame(year,duplicates)
bor2
duplicates <- final_shiny_1[,2]
year <- c("2014","2015")
bor3 <- data.frame(year,duplicates)
duplicates <- final_shiny_1[,2]
year <- c("2014","2015")
bor4 <- data.frame(year,duplicates)
duplicates <- final_shiny_1[,2]
year <- c("2014","2015")
bor5 <- data.frame(year,duplicates)
shiny::runApp()
shiny::runApp()
c <- ggplot(final_shiny_2,aes(x=year,y=duplicates))+
geom_bar(stat="identity")+
theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA))+
xlab("Year")+
ylab("Number of Duplicate Complaints")+
ggtitle("input$burr")
c
c <- ggplot(final_shiny_2,aes(x=year,y=duplicates))+
geom_bar(stat="identity")+
theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA))+
xlab("Year")+
ylab("Number of Duplicate Complaints")+
ggtitle(paste("Borough","input$burr"))
c
shiny::runApp()
shiny::runApp()
shiny::runApp()
topo.colors(12)
topo.colors(2)
shiny::runApp()
shiny::runApp()
topo.colors
topo.colors(12)
topo.colors(12)[1]
topo.colors(2)[1]
topo.colors(2)[1:2]
topo.colors(2)[2,3]
topo.colors(2)[2:3]
topo.colors(3)[2:3]
topo.colors(3)[1,3]
topo.colors(3)[3]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('GitHub/project2-cycle2-8/app')
shiny::runApp('GitHub/project2-cycle2-8/app')
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='cks1001652', token='C61DB6759659A41BE9F2D7CA297FF941', secret='V1ml6sx636JjZS2si1REQVYrJe5RVz3BihvQ1DFA')
library(rsconnect)
rsconnect::deployApp('~/Github/project2-cycle2-8/app')
library(rsconnect)
rsconnect::deployApp('~/Github/project2-cycle2-8/')
library(rsconnect)
deployapp()
deployApp()
shiny::runApp('GitHub/project2-cycle2-8/app')
library(rPython)
setwd("~/GitHub/cycle3cvd-team7/wyc/python")
python.load("test.py")
